# **** ICE4K ****
# awk script to convert SiliconBlue software glb bit file to Modelsim force format
# Usage : awk -f cbit_conv2mti_ice16m.txt bit_file_name > modelsim_force_file_name
# Example : awk -f cbit_conv2mti_ice16m.txt NAND3_bitmap_glb.txt > NAND3_bitmap_glb.do
#  
# Ming: Change from the cbit_conv2mti_ice8m.txt file
# Ming: Change 544 to 864 (address); also change to 216 '0|f'
# Ming: Change ice8p_mipi to ice16p
# Ming: Change ice8p to ice16p

# Henry: Change from cbit_conv2mti_ice16m.txt file
#        Change from 864 address to 352;

BEGIN {
 bl = 0;
 wl = 0;
 quad = 0;
 quad_x4 = 0;
 
 printf("force -freeze {sim:/tb/test_start} 0 0\n"); 
 printf("force -freeze {sim:/tb/chip/gint_hz} 1 0 \n");
 printf("force -freeze {sim:/tb/chip/I_ringroute/I_ring_route00_ice384/I_CHIP_route_rgt_ice4p/I_smc_and_jtag_id_u40/j_hiz_b} 1 0\n"); 
 printf("force -freeze sim:/tb/chip/I_ringroute/I_ring_route00_ice384/I_CHIP_route_rgt_ice4p/I_smc_and_jtag_id_u40/cdone_out 1 0\n"); 
 printf("force -freeze sim:/tb/chip/I_ringroute/I_ring_route00_ice384/I_CHIP_route_rgt_ice4p/I_smc_and_jtag_id_u40/end_of_startup 1 0\n"); 
 printf("force -freeze sim:/tb/chip/I_ringroute/I_ring_route00_ice384/I_CHIP_route_rgt_ice4p/I_smc_and_jtag_id_u40/bm_init 0 0\n"); 
 printf("force -freeze {sim:/tb/chip/I_ringroute/I_ring_route00_ice384/I_CHIP_route_rgt_ice4p/I_smc_and_jtag_id_u40/gio_hz} 0 0 \n");
 printf("force -freeze {sim:/tb/chip/I_ringroute/I_ring_route00_ice384/I_CHIP_route_rgt_ice4p/I_smc_and_jtag_id_u40/gsr} 0 0 \n");
 #printf("force -freeze {sim:/tb/chip/trstb} 0 0\n"); 
 printf("force -freeze {sim:/tb/chip/wl_r} 352'h0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 0 -cancel 1 ns\n"); 
 printf("force -freeze {sim:/tb/chip/wl_l} 352'h0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 0 -cancel 1 ns\n"); 
 printf("force -freeze {sim:/tb/chip/pgate_r} 352'h0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 0 -cancel 1 ns\n"); 
 printf("force -freeze {sim:/tb/chip/pgate_l} 352'h0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 0 -cancel 1 ns\n"); 
 printf("force -freeze {sim:/tb/chip/reset_b_r} 352'hffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff 0 -cancel 1 ns\n"); 
 printf("force -freeze {sim:/tb/chip/reset_b_l} 352'hffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff 0 -cancel 1 ns\n"); 
 printf("force -freeze {sim:/tb/chip/vdd_cntl_r} 352'hffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff 0 -cancel 1 ns\n"); 
 printf("force -freeze {sim:/tb/chip/vdd_cntl_l} 352'hffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff 0 -cancel 1 ns\n"); 
 printf("run 2ns\n");

}

# Ming: No change from here
{
 if (substr($1,1,9)=="LogicTile") { 
 	printf ("#%s \n", $1); quad = 0; quad_x4 = 1; ltile = 1; iotile = 0;
 	}
 else if (substr($1,1,7)=="IO_Tile") { 
 	printf ("#%s \n", $1); quad = 0; quad_x4 = 1; ltile = 0; iotile = 1;
 	}
 else if (substr($1,1,3)=="RAM") { 
 	printf ("#%s \n", $1); quad = 0; quad_x4 = 1; ltile = 0;  iotile = 0;
 	}
 else if (substr($1,1,13)=="GlobalNetwork") { 
 	printf ("#%s \n", $1); quad = 0; quad_x4 = 1; ltile = 0;  iotile = 0;
 	}

 else if (substr($1,1,1)=="(") {
   bl = int(substr($5,2,length($5)));
   wl = int(substr($6,1,(length($6)-1))); 
   
    if (quad_x4 ==1 ) {
        printf ("force -freeze {sim:/tb/chip/wl_l[%s]} 1 %d -cancel 0.1 ns \n ", wl, t); 
        printf ("force -freeze {sim:/tb/chip/pgate_l[%s]} 1 %d -cancel 0.1 ns \n ", wl, t); 
        printf ("force -freeze {sim:/tb/chip/reset_b_l[%s]} 0 %d -cancel 0.1 ns \n ", wl, t); 
        printf ("force -freeze {sim:/tb/chip/vdd_cntl_l[%s]} 0 %d -cancel 0.1 ns \n ", wl, t); 
        printf ("force -freeze {sim:/tb/chip/wl_r[%s]} 1 %d -cancel 0.1 ns \n ", wl, t); 
        printf ("force -freeze {sim:/tb/chip/pgate_r[%s]} 1 %d -cancel 0.1 ns \n ", wl, t); 
        printf ("force -freeze {sim:/tb/chip/reset_b_r[%s]} 0 %d -cancel 0.1 ns \n ", wl, t); 
        printf ("force -freeze {sim:/tb/chip/vdd_cntl_r[%s]} 0 %d -cancel 0.1 ns \n ", wl, t); 
        printf ("force -freeze {sim:/tb/chip/bl_top[%d]} 0 %d -cancel 0.1 ns \n ",  bl, t);     
        printf ("force -freeze {sim:/tb/chip/bl_bot[%d]} 0 %d -cancel 0.1 ns \n ",  bl, t);         
       }
 
    printf ("run 0.2ns \n"); 
    
   }
  
}

END {
 printf("force -freeze {sim:/tb/chip/gint_hz} 0 0 \n");
 printf("run 1ns \n");
 printf("force -freeze {sim:/tb/test_start} 1 0 \n");
 printf("echo 'INFO>> Forcing cbits Completed' \n");
}
