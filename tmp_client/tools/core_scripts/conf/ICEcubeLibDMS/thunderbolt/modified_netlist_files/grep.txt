chip_1_45x1_45_processed.v:// HDL file - leafcell, in_mux_nand_icc, functional.
chip_1_45x1_45_processed.v://module in_mux_nand (inmuxo, cbit[0], cbit[1], cbit[2], cbit[3], cbit[4], 
chip_1_45x1_45_processed.v:module in_mux_nand_icc (inmuxo, cbit, cbitb, min, op_bot, prog);
chip_1_45x1_45_processed.v:in_mux_nand_icc I_in2mux_nand ( .min(min2[15:0]), .inmuxo(in2), .prog(prog), .op_bot(op_bot), .cbit({cbit[50], cbit[12], cbit[13], cbit[16], cbit[19], cbit[17]}), .cbitb({cbitb[50], cbitb[12], cbitb[13], cbitb[16], cbitb[19], cbitb[17]}));
chip_1_45x1_45_processed.v:in_mux_nand_icc I_in2mux_nand ( .min(min2[15:0]), .inmuxo(in2), .prog(prog), .op_bot(op_bot), .cbit({cbit[50], cbit[12], cbit[13], cbit[16], cbit[19], cbit[17]}), .cbitb({cbitb[50], cbitb[12], cbitb[13], cbitb[16], cbitb[19], cbitb[17]}));
chip_1_45x1_45_processed.v:in_mux_nand_icc I_in2mux ( .min(min2[15:0]), .inmuxo(in2), .prog(prog), .op_bot(op_bot), .cbit({cbit[50], cbit[12], cbit[13], cbit[16], cbit[19], cbit[17]}), .cbitb({cbitb[50], cbitb[12], cbitb[13], cbitb[16], cbitb[19], cbitb[17]}));
chip_1_45x1_45_processed.v:in_mux_nand_icc I_in2mux_nand ( .min(min2[15:0]), .inmuxo(in2), .prog(prog), .op_bot(op_bot), .cbit({cbit[50], cbit[12], cbit[13], cbit[16], cbit[19], cbit[17]}), .cbitb({cbitb[50], cbitb[12], cbitb[13], cbitb[16], cbitb[19], cbitb[17]}));
chip_1_45x1_45_processed.v:in_mux_nand_icc I_in2mux_nand ( .min(min2[15:0]), .inmuxo(in2), .prog(prog), .op_bot(op_bot), .cbit({cbit[50], cbit[12], cbit[13], cbit[16], cbit[19], cbit[17]}), .cbitb({cbitb[50], cbitb[12], cbitb[13], cbitb[16], cbitb[19], cbitb[17]}));
chip_1_45x1_45_processed.v:in_mux_nand_icc I_in2mux ( .min(min2[15:0]), .inmuxo(in2), .prog(prog), .op_bot(op_bot), .cbit({cbit[50], cbit[12], cbit[13], cbit[16], cbit[19], cbit[17]}), .cbitb({cbitb[50], cbitb[12], cbitb[13], cbitb[16], cbitb[19], cbitb[17]}));
chipbev_ice1p_4ice384.v://Title:    in_mux_nand
chipbev_ice1p_4ice384.v://Design:   in_mux_nand.v
chipbev_ice1p_4ice384.v:module in_mux_nand ( inmuxo, cbit, cbitb, min, op_bot, prog );
chipbev_ice1p_additon_4ice384.v:module in_mux_nand_icc ( inmuxo, cbit, cbitb, min, op_bot, prog );
chipbev_ice1p_additon_4ice384.v:endmodule  //in_mux_nand_icc
chip_tm1k1_4x1_4_processed.v:// HDL file - leafcell, in_mux_nand_icc, functional.
chip_tm1k1_4x1_4_processed.v://module in_mux_nand (inmuxo, cbit[0], cbit[1], cbit[2], cbit[3], cbit[4], 
chip_tm1k1_4x1_4_processed.v:module in_mux_nand_icc (inmuxo, cbit, cbitb, min, op_bot, prog);
chip_tm1k1_4x1_4_processed.v:in_mux_nand_icc I_in2mux_nand ( .min(min2[15:0]), .inmuxo(in2), .prog(prog), .op_bot(op_bot), .cbit({cbit[50], cbit[12], cbit[13], cbit[16], cbit[19], cbit[17]}), .cbitb({cbitb[50], cbitb[12], cbitb[13], cbitb[16], cbitb[19], cbitb[17]}));
chip_tm1k1_4x1_4_processed.v:in_mux_nand_icc I_in2mux_nand ( .min(min2[15:0]), .inmuxo(in2), .prog(prog), .op_bot(op_bot), .cbit({cbit[50], cbit[12], cbit[13], cbit[16], cbit[19], cbit[17]}), .cbitb({cbitb[50], cbitb[12], cbitb[13], cbitb[16], cbitb[19], cbitb[17]}));
chip_tm1k1_4x1_4_processed.v:in_mux_nand_icc I_in2mux ( .min(min2[15:0]), .inmuxo(in2), .prog(prog), .op_bot(op_bot), .cbit({cbit[50], cbit[12], cbit[13], cbit[16], cbit[19], cbit[17]}), .cbitb({cbitb[50], cbitb[12], cbitb[13], cbitb[16], cbitb[19], cbitb[17]}));
chip_tm1k1_4x1_4_processed.v:in_mux_nand_icc I_in2mux_nand ( .min(min2[15:0]), .inmuxo(in2), .prog(prog), .op_bot(op_bot), .cbit({cbit[50], cbit[12], cbit[13], cbit[16], cbit[19], cbit[17]}), .cbitb({cbitb[50], cbitb[12], cbitb[13], cbitb[16], cbitb[19], cbitb[17]}));
chip_tm1k1_4x1_4_processed.v:in_mux_nand_icc I_in2mux_nand ( .min(min2[15:0]), .inmuxo(in2), .prog(prog), .op_bot(op_bot), .cbit({cbit[50], cbit[12], cbit[13], cbit[16], cbit[19], cbit[17]}), .cbitb({cbitb[50], cbitb[12], cbitb[13], cbitb[16], cbitb[19], cbitb[17]}));
chip_tm1k1_4x1_4_processed.v:in_mux_nand_icc I_in2mux ( .min(min2[15:0]), .inmuxo(in2), .prog(prog), .op_bot(op_bot), .cbit({cbit[50], cbit[12], cbit[13], cbit[16], cbit[19], cbit[17]}), .cbitb({cbitb[50], cbitb[12], cbitb[13], cbitb[16], cbitb[19], cbitb[17]}));
old_chip_tm1k1_4x1_4_processed.v:// HDL file - leafcell, in_mux_nand_icc, functional.
old_chip_tm1k1_4x1_4_processed.v://module in_mux_nand (inmuxo, cbit[0], cbit[1], cbit[2], cbit[3], cbit[4], 
old_chip_tm1k1_4x1_4_processed.v:module in_mux_nand_icc (inmuxo, cbit, cbitb, min, op_bot, prog);
old_chip_tm1k1_4x1_4_processed.v:in_mux_nand_icc I_in2mux_nand ( .min(min2[15:0]), .inmuxo(in2), .prog(prog), .op_bot(op_bot), .cbit({cbit[50], cbit[12], cbit[13], cbit[16], cbit[19], cbit[17]}), .cbitb({cbitb[50], cbitb[12], cbitb[13], cbitb[16], cbitb[19], cbitb[17]}));
old_chip_tm1k1_4x1_4_processed.v:in_mux_nand_icc I_in2mux_nand ( .min(min2[15:0]), .inmuxo(in2), .prog(prog), .op_bot(op_bot), .cbit({cbit[50], cbit[12], cbit[13], cbit[16], cbit[19], cbit[17]}), .cbitb({cbitb[50], cbitb[12], cbitb[13], cbitb[16], cbitb[19], cbitb[17]}));
old_chip_tm1k1_4x1_4_processed.v:in_mux_nand_icc I_in2mux ( .min(min2[15:0]), .inmuxo(in2), .prog(prog), .op_bot(op_bot), .cbit({cbit[50], cbit[12], cbit[13], cbit[16], cbit[19], cbit[17]}), .cbitb({cbitb[50], cbitb[12], cbitb[13], cbitb[16], cbitb[19], cbitb[17]}));
old_chip_tm1k1_4x1_4_processed.v:in_mux_nand_icc I_in2mux_nand ( .min(min2[15:0]), .inmuxo(in2), .prog(prog), .op_bot(op_bot), .cbit({cbit[50], cbit[12], cbit[13], cbit[16], cbit[19], cbit[17]}), .cbitb({cbitb[50], cbitb[12], cbitb[13], cbitb[16], cbitb[19], cbitb[17]}));
old_chip_tm1k1_4x1_4_processed.v:in_mux_nand_icc I_in2mux_nand ( .min(min2[15:0]), .inmuxo(in2), .prog(prog), .op_bot(op_bot), .cbit({cbit[50], cbit[12], cbit[13], cbit[16], cbit[19], cbit[17]}), .cbitb({cbitb[50], cbitb[12], cbitb[13], cbitb[16], cbitb[19], cbitb[17]}));
old_chip_tm1k1_4x1_4_processed.v:in_mux_nand_icc I_in2mux ( .min(min2[15:0]), .inmuxo(in2), .prog(prog), .op_bot(op_bot), .cbit({cbit[50], cbit[12], cbit[13], cbit[16], cbit[19], cbit[17]}), .cbitb({cbitb[50], cbitb[12], cbitb[13], cbitb[16], cbitb[19], cbitb[17]}));
