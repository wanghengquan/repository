//Verilog testbench template generated by SCUBA Diamond (64-bit) 3.9.0.201.0
`timescale 1 ns / 1 ps
module tb;
    reg CLK0 = 0;
    reg CE0 = 0;
    reg RST0 = 0;
    reg SignA = 0;
    reg SignB = 0;
    reg ADDNSUB = 0;
    reg [9:0] A0 = 10'b0;
    reg [9:0] A1 = 10'b0;
    reg [16:0] B0 = 17'b0;
    reg [16:0] B1 = 17'b0;
    wire [27:0] SUM;

    integer i0 = 0, i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;

    GSR GSR_INST (.GSR(1'b1));
    PUR PUR_INST (.PUR(1'b1));

    maddsub_10x17_dynamic_vlog u1 (.CLK0(CLK0), .CE0(CE0), .RST0(RST0), 
        .SignA(SignA), .SignB(SignB), .ADDNSUB(ADDNSUB), .A0(A0), .A1(A1), 
        .B0(B0), .B1(B1), .SUM(SUM)
    );

    always
    #5.00 CLK0 <= ~ CLK0;

    initial
    begin
       CE0 <= 1'b1;
    end
    initial
    begin
       RST0 <= 1'b1;
      #100;
       RST0 <= 1'b0;
    end
    initial
    begin
       A0 <= 0;
      for (i7 = 0; i7 < 200; i7 = i7 + 1) begin
        #10;
         A0 <= A0 + 1'b1;
      end
    end
    initial
    begin
       A1 <= 0;
      for (i8 = 0; i8 < 200; i8 = i8 + 1) begin
        #10;
         A1 <= A1 + 1'b1;
      end
    end
    initial
    begin
       B0 <= 0;
      for (i9 = 0; i9 < 200; i9 = i9 + 1) begin
        #10;
         B0 <= B0 + 1'b1;
      end
    end
    initial
    begin
       B1 <= 0;
      for (i10 = 0; i10 < 200; i10 = i10 + 1) begin
        #10;
         B1 <= B1 + 1'b1;
      end
    end
endmodule